name: Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby-version: ['3.0', '3.1', '3.2', '3.3']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Ruby ${{ matrix.ruby-version }}
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}
        bundler-cache: true

    - name: Install dependencies
      run: |
        bundle install
        bundle exec rake install

    - name: Run RuboCop with auto-fix
      run: bundle exec rubocop -A

    - name: Check for RuboCop violations after auto-fix
      run: bundle exec rubocop

    - name: Run syntax check
      run: bundle exec rake syntax

    - name: Run security audit
      run: bundle exec bundle audit check --update

    - name: Run RSpec tests
      run: bundle exec rspec --format progress

    - name: Run RSpec tests with coverage
      run: bundle exec rspec --format progress --coverage
      env:
        COVERAGE: true

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/.resultset.json
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

    - name: Run yard documentation check
      run: bundle exec yard doc --fail-on-warning

    - name: Check gem build
      run: bundle exec rake build

    - name: Check gem install
      run: bundle exec rake install

  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby-version: ['3.2']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Ruby ${{ matrix.ruby-version }}
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}
        bundler-cache: true

    - name: Install dependencies
      run: bundle install

    - name: Run RuboCop
      run: bundle exec rubocop

    - name: Run StandardRB
      run: bundle exec standardrb --format=quiet

    - name: Check for unused dependencies
      run: bundle exec debride lib/

    - name: Check for security vulnerabilities
      run: bundle exec bundle audit check --update

  rails-integration:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rails-version: ['7.0', '7.1', '7.2']
        ruby-version: ['3.2']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Ruby ${{ matrix.ruby-version }}
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}
        bundler-cache: true

    - name: Install dependencies
      run: bundle install

    - name: Create test Rails app
      run: |
        rails new test_app --skip-git --skip-bundle --skip-test --skip-system-test --skip-webpack-install
        cd test_app
        echo "gem 'rich_text_extraction', path: '../'" >> Gemfile
        bundle install

    - name: Test Rails integration
      run: |
        cd test_app
        bundle exec rails runner "puts 'Rails integration test passed'"

  gem-publish-check:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    strategy:
      matrix:
        ruby-version: ['3.2']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Ruby ${{ matrix.ruby-version }}
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}
        bundler-cache: true

    - name: Install dependencies
      run: bundle install

    - name: Build gem
      run: bundle exec rake build

    - name: Check gem metadata
      run: bundle exec rake check_metadata

    - name: Validate gem structure
      run: bundle exec rake validate_gem

  performance:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby-version: ['3.2']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Ruby ${{ matrix.ruby-version }}
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}
        bundler-cache: true

    - name: Install dependencies
      run: bundle install

    - name: Run performance tests
      run: bundle exec rake performance

    - name: Run memory profiling
      run: bundle exec rake memory_profile

  documentation:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby-version: ['3.2']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Ruby ${{ matrix.ruby-version }}
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}
        bundler-cache: true

    - name: Install dependencies
      run: bundle install

    - name: Generate documentation
      run: bundle exec yard doc

    - name: Check documentation coverage
      run: bundle exec yard stats --list-undoc

    - name: Upload documentation artifacts
      uses: actions/upload-artifact@v3
      with:
        name: documentation
        path: doc/ 