# frozen_string_literal: true

# Test for the initializer file generated by the install generator.
# Ensures all configuration options are present and correct.

require 'test_helper'
require 'rails/generators'
require 'rails/generators/test_case'
require 'generators/rich_text_extraction/install/install_generator'
require_relative '../../support/generator_test_helper'

class InitializerGeneratorTest < Rails::Generators::TestCase
  include GeneratorTestHelper
  tests RichTextExtraction::Generators::InstallGenerator
  destination File.expand_path('../../../../tmp', __dir__)
  setup :prepare_destination

  def test_initializer_file_created_with_all_options
    run_generator
    assert_file 'config/initializers/rich_text_extraction.rb', /RichTextExtraction\.configure/
    # OpenGraph
    assert_file 'config/initializers/rich_text_extraction.rb', /opengraph_timeout/
    assert_file 'config/initializers/rich_text_extraction.rb', /max_redirects/
    assert_file 'config/initializers/rich_text_extraction.rb', /user_agent/
    assert_file 'config/initializers/rich_text_extraction.rb', /sanitize_html/
    # Markdown
    assert_file 'config/initializers/rich_text_extraction.rb', /markdown_renderer/
    assert_file 'config/initializers/rich_text_extraction.rb', /markdown_options/
    # Cache
    assert_file 'config/initializers/rich_text_extraction.rb', /cache_enabled/
    assert_file 'config/initializers/rich_text_extraction.rb', /cache_prefix/
    assert_file 'config/initializers/rich_text_extraction.rb', /cache_ttl/
    assert_file 'config/initializers/rich_text_extraction.rb', /cache_compression/
    # Content
    assert_file 'config/initializers/rich_text_extraction.rb', /default_excerpt_length/
    assert_file 'config/initializers/rich_text_extraction.rb', /max_link_count/
    assert_file 'config/initializers/rich_text_extraction.rb', /max_content_length/
    # Debug
    assert_file 'config/initializers/rich_text_extraction.rb', /debug/
    assert_file 'config/initializers/rich_text_extraction.rb', /log_level/
    # Security
    assert_file 'config/initializers/rich_text_extraction.rb', /allowed_protocols/
    assert_file 'config/initializers/rich_text_extraction.rb', /blocked_domains/
    assert_file 'config/initializers/rich_text_extraction.rb', /max_image_size/
  end

  def test_does_not_overwrite_existing_initializer
    prepare_destination
    initializer_path = File.join(destination_root, 'config/initializers/rich_text_extraction.rb')
    FileUtils.mkdir_p(File.dirname(initializer_path))
    File.write(initializer_path, 'original content')
    run_generator
    assert_equal 'original content', File.read(initializer_path)
  end
end 